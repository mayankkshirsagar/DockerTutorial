# RUN THESE COMMANDS FROM THE LOCATION OF THE DOCKERFILE

# Build the Docker image , -t java-hello-world-custom-tag = custom name for the image ,
# [.] indicates search for docker file in pwd directory
docker build -t java-hello-world-custom-tag .

# Run the container , --rm means remove container once done running
docker run --rm java-hello-world-custom-tag

# create a tar of the docker image
docker save -o java-hello-world-custom-tag.tar java-hello-world-custom-tag

# load image from the tar
docker load -i java-hello-world-custom-tag.tar

# why multistage image reduces size ?
Even if every stage uses a full base OS image like ubuntu, the final image only includes:
    1. The final stageâ€™s base image (e.g., alpine, ubuntu, etc.)
    2. Any files copied into it
    3. No leftover build tools, compilers, source code, or previous image layers unless explicitly copied
Each stage is a separate image, and Docker only uses the final one to produce the final result.
