# RUN THESE COMMANDS FROM THE LOCATION OF THE DOCKERFILE

# Build the Docker image , -t java-hello-world-custom-tag = custom name for the image ,
# [.] indicates search for docker file in pwd directory
docker build -t java-hello-world-custom-tag .

# Run the container , --rm means remove container once done running
docker run --rm java-hello-world-custom-tag

# create a tar of the docker image
docker save -o java-hello-world-custom-tag.tar java-hello-world-custom-tag

# load image from the tar
docker load -i java-hello-world-custom-tag.tar

# why multistage image reduces size ?
Even if every stage uses a full base OS image like ubuntu, the final image only includes:
    1. The final stage’s base image (e.g., alpine, ubuntu, etc.)
    2. Any files copied into it
    3. No leftover build tools, compilers, source code, or previous image layers unless explicitly copied
Each stage is a separate image, and Docker only uses the final one to produce the final result.

# Why RUN echo ... output might be hidden during build?
BuildKit (modern default builder) buffers and hides the output of RUN commands that complete successfully.
It only shows output if the command fails or if you disable BuildKit.
So even though echo "date is : $DATE" runs and prints text, you might not see it in the build logs.
DOCKER_BUILDKIT=0 docker build --build-arg DATE="5-10-15" -t java-hello-world-custom-tag .

# docker Registry
Pulling from docker registry and existing image
docker pull /server/username/repository:tag for example we can run
docker pull alpine , this maps to docker pull docker.io/library/alpine:latest
output :
Status: Downloaded newer image for alpine:latest
docker.io/library/alpine:latest
if specific tag is not provided , it will assume its latest
if server and username is not specified it will assume its docker.io and library

Pushing our image to docker hub
First create our image : docker build -t docker-basic-test .
Now we need to assign a tag to this image
docker tag docker-basic-test docker.io/mayankkshirsagar/docker-basic-test:latest
Now if we check images we see
REPOSITORY                           TAG       IMAGE ID       CREATED      SIZE
docker-basic-test                    latest    a7d18d685ade   3 days ago   369MB
mayankkshirsagar/docker-basic-test   latest    a7d18d685ade   3 days ago   369MB
Now push
docker push mayankkshirsagar/docker-basic-test
For authentication which is needed when pulling private repo we need to set docker user
docker login -u username server , so we can use
docker login -u mayankkshirsagar docker.io
to remove credentials , docker logout server
docker logout docker.io

# running docker images interactively and in background
docker run -d imagename , this frees the terminal and docker image runs in the background

docker build -t docker-basic-test .
docker run -d docker-basic-test
this starts the docker container, run docker ps to see the container info
 docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS     NAMES
9f653e069e0e   docker-basic-test   "/__cacert_entrypoin…"   3 seconds ago   Up 2 seconds             vigorous_keller
once the image finishes running , docker ps will be empty
 docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
to get list of all processes, docker ps -a
 docker ps -a
CONTAINER ID   IMAGE               COMMAND                  CREATED              STATUS                      PORTS     NAMES
9f653e069e0e   docker-basic-test   "/__cacert_entrypoin…"   17 seconds ago       Exited (0) 12 seconds ago             vigorous_keller
to remove and old container from docker ps -a
docker rm 9f653e069e0e
docker ps -a , results in empty
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES

docker container have a random name, to have a specific name we can use while the container is running
docker name vigorous_keller custom_name
but to start image container with a custom name
docker run -d --name container_named docker-basic-test
docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS     NAMES
343017245f38   docker-basic-test   "/__cacert_entrypoin…"   4 seconds ago   Up 4 seconds             container_named

to check logs in container
docker logs containerid
 docker logs 343017245f38
Hello and welcome!
i = 1
i = 2
i = 3
i = 4
i = 5


